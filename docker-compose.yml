version: '3.3'

services:
  app:
    build:
      context: .
      dockerfile: docker/php/Dockerfile
    container_name: laradevops_app
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - ./src:/var/www/html
      - ./backups:/backups
    networks:
      - laradevops_network

  nginx:
    image: nginx:stable-alpine
    container_name: laradevops_nginx
    restart: unless-stopped
    ports:
      - "${NGINX_PORT:-8081}:80"
    volumes:
      - ./src:/var/www/html
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - app
    networks:
      - laradevops_network

  mysql:
    image: mysql:8.0
    container_name: laradevops_mysql
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE:-laradevops}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-root_password}
      MYSQL_USER: ${MYSQL_USER:-laradevops_user}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-laradevops_password}
    volumes:
      - mysql_data:/var/lib/mysql
    ports:
      - "${MYSQL_PORT:-3307}:3306"
    networks:
      - laradevops_network

  redis:
    image: redis:latest
    container_name: laradevops_redis
    restart: unless-stopped
    ports:
      - "${REDIS_PORT:-6379}:6379"
    networks:
      - laradevops_network

  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    container_name: laradevops_phpmyadmin
    restart: unless-stopped
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
      PMA_USER: ${MYSQL_USER:-laradevops_user}
      PMA_PASSWORD: ${MYSQL_PASSWORD:-laradevops_password}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-root_password}
    ports:
      - "${PHPMYADMIN_PORT:-8082}:80"
    depends_on:
      - mysql
    networks:
      - laradevops_network

  scheduler:
    build:
      context: .
      dockerfile: docker/scheduler/Dockerfile
    container_name: laradevops_scheduler
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - ./src:/var/www/html
    depends_on:
      - app
      - redis
      - mysql
    networks:
      - laradevops_network

  mailhog:
    image: mailhog/mailhog:latest
    container_name: laradevops_mailhog
    restart: unless-stopped
    ports:
      - "${MAILHOG_PORT:-8025}:8025"
      - "${MAILHOG_SMTP_PORT:-1025}:1025"
    networks:
      - laradevops_network


volumes:
  mysql_data:
    driver: local

networks:
  laradevops_network:
    driver: bridge
